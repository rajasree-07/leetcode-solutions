/**
 * @param {string} s
 * @param {number} repeatLimit
 * @return {string}
 */
var repeatLimitedString = function(s, repeatLimit) {
    // Count occurrences of each character in the input string
    const charCounts = new Array(26).fill(0);
    for (const ch of s) {
        charCounts[ch.charCodeAt(0) - 'a'.charCodeAt(0)]++;
    }

    // Initialize the answer string
    let result = '';

    // Iterate over the characters starting from 'z' to 'a'
    for (let i = 25; i >= 0; --i) {
        let nextCharIndex = i - 1;

        // Continue to construct the string until all chars are used
        while (true) {
            // Add the current character up to repeatLimit times
            const repeatCount = Math.min(charCounts[i], repeatLimit);
            for (let k = repeatCount; k > 0; --k) {
                charCounts[i]--;
                result += String.fromCharCode('a'.charCodeAt(0) + i);
            }

            // Break the loop if this character is fully used
            if (charCounts[i] === 0) break;

            // Find the next available character with remaining count
            while (nextCharIndex >= 0 && charCounts[nextCharIndex] === 0) {
                --nextCharIndex;
            }
          
            // Break if there are no more characters to use
            if (nextCharIndex < 0) break;

            // Add the next available character to the result string
            charCounts[nextCharIndex]--;
            result += String.fromCharCode('a'.charCodeAt(0) + nextCharIndex);
        }
    }

    // Return the constructed string
    return result;
};
