/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
var largestValues = function(root) {
        const res = [];
    const dfs = (root, depth) => {
        if (root == null) {
            return;
        }
        const { val, left, right } = root;
        if (res.length == depth) {
            res.push(val);
        } else {
            res[depth] = Math.max(res[depth], val);
        }
        dfs(left, depth + 1);
        dfs(right, depth + 1);
    };
    dfs(root, 0);
    return res;

};
